import healthRouter from './components/v1.0/health';
import authRouter from './components/v1.0/auth';
import registrationRouter from './components/v1.0/registration';
import termsRouter from './components/v1.0/terms';
import tenantAPICredentialsRouter from './components/v1.0/credentials';
import projectRouter from './components/v1.0/tenantproject';
import groupRouter from './components/v1.0/projectgroup';
import testunitRouter from './components/v1.0/testunit';
import testCaseRouter from './components/v1.0/mongodb/testcase';
import rpRouter from './components/v1.0/reportportal';
import testerRouter from './components/v1.0/tester';
import automationLaunchRouter from './components/v1.0/mongodb/automationlaunch';
import tenantRouter from './components/v1.0/tenant';
import analyticsRouter from './components/v1.0/analytics';
import buildRouter from './components/v1.0/mongodb/projectbuild';
import runRouter from './components/v1.0/mongodb/projectRun';
import manuallaunchRouter from './components/v1.0/mongodb/manuallaunch';
import defectRouter from './components/v1.0/mongodb/defect';
import apimatrixRouter from './components/v1.0/mongodb/apimatrix';
import sprintRouter from './components/v1.0/mongodb/sprints';
import permissionRouter from './components/v1.0/permissions';
import activityRouter from './components/v1.0/mongodb/activity';
import activityListRouter from './components/v1.0/activity_list';
import express from 'express';
const router = express.Router();

router.use('/health', healthRouter);
router.use('/auth', authRouter);
router.use('/registration', registrationRouter);
router.use('/terms', termsRouter);
router.use('/credentials', tenantAPICredentialsRouter);
router.use('/projects', projectRouter);
router.use('/groups', groupRouter);
router.use('/test_units', testunitRouter);
router.use('/testcases', testCaseRouter);
router.use('/reportportal', rpRouter);
router.use('/tester', testerRouter);
router.use('/automationlaunches', automationLaunchRouter);
router.use('/tenants', tenantRouter);
router.use('/analytics', analyticsRouter);
router.use('/builds', buildRouter);
router.use('/runs', runRouter);
router.use('/manuallaunches', manuallaunchRouter);
router.use('/defects', defectRouter);
router.use('/apimatrix', apimatrixRouter);
router.use('/sprints', sprintRouter);
router.use('/permissions', permissionRouter);
router.use('/activities', activityRouter);
router.use('/activity-lists', activityListRouter);
export default router;
